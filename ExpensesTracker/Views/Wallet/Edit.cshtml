@model ExpensesTracker.Common.EntityModel.Sqlite.WalletEntry
@{
}

@using (Html.BeginForm("SaveEntry", "Wallet", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.EntryId)

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount)
            @Html.ValidationMessageFor(model => model.Amount)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Date, new { @type = "date", @class = "col-md-10" })
            @Html.ValidationMessageFor(model => model.Date)
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Category", "Select a category", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CategoryId, ViewBag.Categories as SelectList, new
                    {
                        @class = "form-control"
                    })
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LabelId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
             @Html.DropDownListFor(model => model.LabelId, ViewBag.Labels as SelectList, new
                    {
                        @class = "form-control"
                    })
            @Html.ValidationMessageFor(model => model.LabelId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
